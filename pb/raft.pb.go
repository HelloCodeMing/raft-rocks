// Code generated by protoc-gen-go.
// source: raft.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	raft.proto

It has these top-level messages:
	AppendEntiresReq
	AppendEntriesRes
	RequestVoteReq
	RequestVoteRes
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pb1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendEntiresReq struct {
	Term         int32            `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	LeaderId     int32            `protobuf:"varint,2,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	PrevLogIndex int32            `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex" json:"prev_log_index,omitempty"`
	PrevLogTerm  int32            `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm" json:"prev_log_term,omitempty"`
	LogEntries   []*pb1.KVCommand `protobuf:"bytes,5,rep,name=log_entries,json=logEntries" json:"log_entries,omitempty"`
	LeaderCommit int32            `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit" json:"leader_commit,omitempty"`
}

func (m *AppendEntiresReq) Reset()                    { *m = AppendEntiresReq{} }
func (m *AppendEntiresReq) String() string            { return proto.CompactTextString(m) }
func (*AppendEntiresReq) ProtoMessage()               {}
func (*AppendEntiresReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppendEntiresReq) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntiresReq) GetLeaderId() int32 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *AppendEntiresReq) GetPrevLogIndex() int32 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntiresReq) GetPrevLogTerm() int32 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntiresReq) GetLogEntries() []*pb1.KVCommand {
	if m != nil {
		return m.LogEntries
	}
	return nil
}

func (m *AppendEntiresReq) GetLeaderCommit() int32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type AppendEntriesRes struct {
	Term    int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *AppendEntriesRes) Reset()                    { *m = AppendEntriesRes{} }
func (m *AppendEntriesRes) String() string            { return proto.CompactTextString(m) }
func (*AppendEntriesRes) ProtoMessage()               {}
func (*AppendEntriesRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppendEntriesRes) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RequestVoteReq struct {
	Term         int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	CandidateId  int32 `protobuf:"varint,2,opt,name=candidate_id,json=candidateId" json:"candidate_id,omitempty"`
	LastLogIndex int32 `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex" json:"last_log_index,omitempty"`
	LastLogTerm  int32 `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm" json:"last_log_term,omitempty"`
}

func (m *RequestVoteReq) Reset()                    { *m = RequestVoteReq{} }
func (m *RequestVoteReq) String() string            { return proto.CompactTextString(m) }
func (*RequestVoteReq) ProtoMessage()               {}
func (*RequestVoteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestVoteReq) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteReq) GetCandidateId() int32 {
	if m != nil {
		return m.CandidateId
	}
	return 0
}

func (m *RequestVoteReq) GetLastLogIndex() int32 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteReq) GetLastLogTerm() int32 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteRes struct {
	Term        int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	VoteGranted bool  `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted" json:"vote_granted,omitempty"`
}

func (m *RequestVoteRes) Reset()                    { *m = RequestVoteRes{} }
func (m *RequestVoteRes) String() string            { return proto.CompactTextString(m) }
func (*RequestVoteRes) ProtoMessage()               {}
func (*RequestVoteRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestVoteRes) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRes) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

func init() {
	proto.RegisterType((*AppendEntiresReq)(nil), "pb.AppendEntiresReq")
	proto.RegisterType((*AppendEntriesRes)(nil), "pb.AppendEntriesRes")
	proto.RegisterType((*RequestVoteReq)(nil), "pb.RequestVoteReq")
	proto.RegisterType((*RequestVoteRes)(nil), "pb.RequestVoteRes")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x6e, 0xe2, 0x30,
	0x10, 0xc6, 0x15, 0xfe, 0x2d, 0x3b, 0x21, 0x68, 0x65, 0xed, 0x21, 0x62, 0x2f, 0x6c, 0xda, 0x03,
	0xa7, 0x1c, 0xa8, 0x7a, 0xea, 0xa5, 0x15, 0x42, 0x08, 0xb5, 0xa7, 0xa8, 0xe2, 0x1a, 0x99, 0x78,
	0x88, 0xa2, 0x26, 0x71, 0xb0, 0x0d, 0xaa, 0xfa, 0x16, 0x7d, 0xc5, 0x3e, 0x49, 0x65, 0x3b, 0xa5,
	0x01, 0xca, 0x2d, 0xfe, 0xf9, 0xcb, 0xcc, 0x7c, 0x9f, 0x07, 0x40, 0xd0, 0x8d, 0x0a, 0x2b, 0xc1,
	0x15, 0x27, 0xad, 0x6a, 0x3d, 0x1a, 0xe8, 0xf3, 0xcb, 0xde, 0x92, 0xe0, 0xc3, 0x81, 0x3f, 0x0f,
	0x55, 0x85, 0x25, 0x9b, 0x97, 0x2a, 0x13, 0x28, 0x23, 0xdc, 0x12, 0x02, 0x1d, 0x85, 0xa2, 0xf0,
	0x9d, 0xb1, 0x33, 0xe9, 0x46, 0xe6, 0x9b, 0xfc, 0x83, 0xdf, 0x39, 0x52, 0x86, 0x22, 0xce, 0x98,
	0xdf, 0x32, 0x17, 0x7d, 0x0b, 0x96, 0x8c, 0x5c, 0xc3, 0xb0, 0x12, 0xb8, 0x8f, 0x73, 0x9e, 0xc6,
	0x59, 0xc9, 0xf0, 0xd5, 0x6f, 0x1b, 0xc5, 0x40, 0xd3, 0x27, 0x9e, 0x2e, 0x35, 0x23, 0x01, 0x78,
	0x07, 0x95, 0xa9, 0xdf, 0x31, 0x22, 0xb7, 0x16, 0x3d, 0xeb, 0x36, 0x21, 0xb8, 0xfa, 0x1a, 0x4b,
	0x25, 0x32, 0x94, 0x7e, 0x77, 0xdc, 0x9e, 0xb8, 0x53, 0x2f, 0xac, 0xd6, 0xe1, 0xe3, 0x6a, 0xc6,
	0x8b, 0x82, 0x96, 0x2c, 0x82, 0x9c, 0xa7, 0x73, 0x2b, 0x20, 0x57, 0xe0, 0xd5, 0x63, 0x25, 0xbc,
	0x28, 0x32, 0xe5, 0xf7, 0x6c, 0x63, 0x0b, 0x67, 0x86, 0x05, 0xf7, 0x0d, 0x8f, 0xfa, 0xaf, 0x08,
	0xe5, 0x8f, 0x1e, 0x7d, 0xf8, 0x25, 0x77, 0x49, 0x82, 0x52, 0x1a, 0x87, 0xfd, 0xe8, 0xeb, 0x18,
	0xbc, 0x3b, 0x30, 0x8c, 0x70, 0xbb, 0x43, 0xa9, 0x56, 0x5c, 0xe1, 0xa5, 0x90, 0xfe, 0xc3, 0x20,
	0xa1, 0x25, 0xcb, 0x18, 0x55, 0xf8, 0x9d, 0x93, 0x7b, 0x60, 0x36, 0xaa, 0x9c, 0x4a, 0x75, 0x1e,
	0x95, 0xa6, 0xcd, 0xa8, 0x0e, 0xaa, 0x66, 0x54, 0xb5, 0x48, 0x47, 0x15, 0x2c, 0x4e, 0x46, 0x92,
	0x97, 0x46, 0xda, 0x73, 0x85, 0x71, 0x2a, 0x68, 0xa9, 0x90, 0xd5, 0xc6, 0x5c, 0xcd, 0x16, 0x16,
	0x4d, 0xdf, 0xa0, 0x13, 0xd1, 0x8d, 0x22, 0xb7, 0xe0, 0x36, 0x0a, 0x12, 0xa2, 0x53, 0x3f, 0x36,
	0x3d, 0x3a, 0x67, 0x92, 0xdc, 0x81, 0x77, 0xb4, 0x41, 0xe4, 0xaf, 0x16, 0x9d, 0x2e, 0xd5, 0xe8,
	0x98, 0xd6, 0xcf, 0xb0, 0xee, 0x99, 0x35, 0xbc, 0xf9, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xa4,
	0x9a, 0x7d, 0xa6, 0x02, 0x00, 0x00,
}
